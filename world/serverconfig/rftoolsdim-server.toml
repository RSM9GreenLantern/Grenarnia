
#Dimension settings
[dimensions]
	#Maximum power in a dimension
	#Range: 0 ~ 9223372036854775807
	maxDimensionPower = 40000000
	#Enable dynamic scaling of the Phase Field Generator cost based on world tick cost
	enableDynamicPhaseCost = false
	#The maintenance cost of randomized dimlets is multiplied with this value before applying to the dimension
	#Range: 0.0 ~ 10.0
	randomizedDimletCostFactor = 0.1
	#If true creating dimensions requires an owner dimlet
	ownerDimletRequired = false
	#The third level at which power warning signs are starting to be very bad
	#Range: 0 ~ 9223372036854775807
	dimensionPowerWarn3 = 500000
	#The chance of a dimlet hut for a given chunk
	#Range: 0.0 ~ 1.0
	dimletHutChance = 0.005
	#The second level at which power warning signs are starting to become worse
	#Range: 0 ~ 9223372036854775807
	dimensionPowerWarn2 = 1000000
	#The first level at which power warning signs are starting to happen
	#Range: 0 ~ 9223372036854775807
	dimensionPowerWarn1 = 4000000
	#How much of the tick cost of the world is applied to the PFG cost, as a ratio from 0 to 1
	#Range: 0.0 ~ 1.0
	dynamicPhaseCostAmount = 0.05000000074505806
	#If true you will get some debufs when the PFG is in use. If false there will be no debufs
	phasedFieldGeneratorDebuf = true
	#The zero level at which power warning signs are starting to happen. This is only used for lighting level. No other debuffs occur at this level.
	#Range: 0 ~ 9223372036854775807
	dimensionPowerWarn0 = 6000000

#Dimension Builder settings
[dimensionbuilder]
	#Maximum RF storage that the phased field generator item can hold
	#Range: 0 ~ 9223372036854775807
	phasedFieldMaxRF = 1000000
	#Maximum RF storage that the dimension builder can receive per side
	#Range: > 0
	generatorMaxRF = 20000
	#RF per tick that the phased field generator item will consume
	#Range: 0 ~ 9223372036854775807
	phasedFieldConsumePerTick = 100
	#RF per tick that the phased field generator item can receive
	#Range: 0 ~ 9223372036854775807
	phasedFieldRFPerTick = 1000

#Dimlets settings
[dimlets]
	#This is a list of dimlet packages that will be used. Later dimlet packages can override dimlets defined in earlier packages. You can place these packages in the 'config/rftoolsdim' folder
	dimletPackages = ["base.json", "vanilla_blocks.json", "vanilla_biomes.json", "rftools.json", "appliedenergistics2.json", "biggerreactors.json", "bigreactors.json", "botania.json", "immersiveengineering.json", "mekanism.json", "powah.json", "quark.json", "tconstruct.json", "thermal.json"]

#Dimlet Workbench settings
[dimletworkbench]
	#Maximum amount of power the researcher can store
	#Range: > 0
	researcherMaxPower = 100000
	#Amount of RF per tick input (per side) for the researcher
	#Range: > 0
	researcherRFPerTick = 10000
	#How many ticks are needed to research one item
	#Range: > 0
	researcheTime = 400
	#Amount of RF per tick the researcher uses while operating
	#Range: > 0
	researcherUsePerTick = 200

#Dimension Builder settings
[blobs]
	#Regeneration level of the rare blob in case the dimension has power
	#Range: > 0
	rareBlobRegen = 3
	#Below this dimension power the regeneration of the blobs stop
	#Range: 0 ~ 9223372036854775807
	blobRegenerationLevel = 1000
	#Maximum health of the legendary blob
	#Range: > 0
	legendaryBlobMaxHealth = 5000
	#Maximum health of the common blob
	#Range: > 0
	commonBlobMaxHealth = 30
	#Regeneration level of the legendary blob in case the dimension has power
	#Range: > 0
	legendaryBlobRegen = 4
	#Regeneration level of the common blob in case the dimension has power
	#Range: > 0
	commonBlobRegen = 2
	#Maximum health of the rare blob
	#Range: > 0
	rareBlobMaxHealth = 250

#Essence settings
[essences]
	#Amount of ticks needed for a single biome dimlet (for the biome absorber)
	#Range: > 1
	maxBiomeAbsorption = 5000
	#Amount of blocks needed for a single block dimlet (for the block absorber)
	#Range: > 1
	maxBlockAbsorption = 256

